{{- /* Extract the host where the Keycloak runs by extracting it from the auth URL via regex. */ -}}
{{- $keycloakUrl := tpl (.Values.keycloak.authUrl | toString) . -}}
{{- /* Regex to match a URL that matches the host in group 1: ([^/]+) */ -}}
{{- $hostRegex := `^https?://([^/]+)(/.*)?$` -}}
{{- /* Replace the URL with only the first group which is only the host. */ -}}
{{- $keycloakHost:= regexReplaceAll $hostRegex $keycloakUrl `$1` -}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy-config
  namespace: {{ .Release.Namespace }}
data:
  oauth2-proxy.cfg: |+
    # Provider config
    provider="keycloak-oidc"
    redirect_url="https://placeholder/oauth2/callback"
    oidc_issuer_url="{{ $keycloakUrl }}realms/{{ tpl (.Values.keycloak.realm | toString) . }}"
    ssl_insecure_skip_verify=true
    # Client config
    client_id="{{ tpl (.Values.keycloak.clientId | toString) . }}"
    client_secret="{{ tpl (.Values.keycloak.clientSecret | toString) . }}"
    cookie_secret="{{ tpl (.Values.keycloak.cookieSecret | toString) . }}"
    cookie_secure="false"
    #proxy_prefix=""
    # Upstream config
    http_address="0.0.0.0:5000"
    upstreams="http://127.0.0.1:placeholder-port/"
    # Proxy Config
    #user_id_claim="preferred_username"
    skip_auth_routes=["/health.*"]
    skip_provider_button="true"
    reverse_proxy="true"
    # email_domains=["*"]
    {{- $cookieDomains := .Values.oauth2Proxy.cookieDomains | default (list) }}
    {{- $whitelistDomains := .Values.oauth2Proxy.whitelistDomains | default (list) }}
    {{- if .Values.hosts.usePaths }}
      {{- if gt (len $cookieDomains) 0 }}
    cookie_domains={{ toJson $cookieDomains }}
      {{- else }}
    cookie_domains=["{{ tpl (.Values.hosts.configuration.baseHost | toString) . }}"]
      {{- end }}
      {{- if gt (len $whitelistDomains) 0 }}
    whitelist_domains={{ toJson $whitelistDomains }}
      {{- else }}
    whitelist_domains=["{{ tpl (.Values.hosts.configuration.baseHost | toString) . }}:*","{{ $keycloakHost }}:*"]
      {{- end }}
    {{- else }}
      {{- if gt (len $cookieDomains) 0 }}
    cookie_domains={{ toJson $cookieDomains }}
      {{- else }}
    cookie_domains=["{{ tpl (.Values.hosts.configuration.instance | toString) . }}.{{ tpl (.Values.hosts.configuration.baseHost | toString) . }}"]
      {{- end }}
      {{- if gt (len $whitelistDomains) 0 }}
    whitelist_domains={{ toJson $whitelistDomains }}
      {{- else }}
    whitelist_domains=["{{ tpl (.Values.hosts.configuration.instance | toString) . }}:*","{{ $keycloakHost }}:*"]
      {{- end }}
    {{- end }}
    custom_templates_dir="/templates"
