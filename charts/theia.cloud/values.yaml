# -- The default imagePullPolicy for containers of theia cloud.
# Can be overridden for individual components by specifying the imagePullPolicy variable there.
# Possible values:
# - Always
# - IfNotPresent
# - Never
imagePullPolicy: Always

# -- General information about the deployed app
# @default -- (see details below)
app:
  # -- The app id which is used in the communication between website and REST-API
  # as a spam migitation. This id is public. Please choose an random generated string.
  id: asdfghjkl

  # -- The name of the application that should be displayed on the landing pages
  name: Theia Blueprint

  # -- The logo of the application that should be displayed on the landing pages
  logo: logos/theiablueprint.svg

  # -- Set a base64 encoded svg image that should be displayed on the landing pages.
  # If this is given, the logo value above is ignored.
  # On Linux, you can directly generate the base64 string when applying the chart like this:
  # --set app.logoData=$(cat path/to/file.svg | base64 -w 0 -)
  # Another way is to directly add the base64 string to the values file.
  logoData:

# -- Values related to certificates/Cert-manager
# @default -- (see details below)
issuer:
  # -- EMail address of the certificate issuer.
  email: mmorlock@example.com

# -- Information about the demo application to be installed
# @default -- (see details below)
demoApplication:
  # -- Should the demo application be installed
  install: true
  # -- The name of docker image to be used
  name: theiacloud/theia-cloud-demo:0.11.0-next

  # -- Optional: Override the imagePullPolicy for the main application's docker image.
  # If this is omitted or empty, the root at .Values.imagePullPolicy is used.
  imagePullPolicy:

  # -- the image pull secret. Leave empty if registry is public
  pullSecret: ""

  # -- Limit in minutes
  timeout: "30"

  # -- Values that are used by the monitor
  # @default -- (see details below)
  monitor:
    # -- At which port the monitor extension is available
    # For the Theia extension take the same as the application port
    # For the VSCode extension take 8081 (default) or the port specified via the THEIACLOUD_MONITOR_PORT env variable
    port: 3000  
    # -- Values that are used by the activityTracker module
    # @default -- (see details below)
    activityTracker:
      # -- Minutes of inactivity that lead to pod shutdown
      timeoutAfter: 30
      # -- Minutes of inactivity that lead to a warning displayed to the user
      # Make greater than timeoutAfter to disable
      notifyAfter: 25

# -- You may adjust the hostname below.
# @default -- (see details below)
hosts:
  # -- Use paths configures that all services should run on the same host but on different paths.
  # true uses paths
  # false uses an explicit host for each service
  usePaths: false

  # -- Does Theia Cloud expect TLS connections (true)
  # or is TLS terminated outside of Theia Cloud (e.g. via a Load Balancer) (false)
  tls: true

  # -- Only needed when usePaths == true. Contains the baseHost and paths for all services
  # @default -- (see details below)
  paths:
    # -- baseHost configures the host for all services when usePaths == true. Otherwise the explicit host definitions of the services are used.
    baseHost: 192.168.39.173.nip.io
    # -- path of the REST service
    service: servicex
    # -- path of the landing page
    landing: trynow
    # -- path for deployed instances
    instance: instances

  # -- hostname of the REST-API
  service: service.192.168.39.173.nip.io

  # -- protocol of the REST-API
  serviceProtocol: https

  # -- service port (default: 8081)
  servicePort: 8081

  # -- whether the service port needs to be part of the service URL (default: false)
  useServicePortInHostname: false

  # -- hostname of the landing page
  landing: theia.cloud.192.168.39.173.nip.io

  # -- hostname for the launched Theia-applications
  instance: ws.192.168.39.173.nip.io

# -- Values related to the landing page
# @default -- (see details below)
landingPage:
  # -- the landing page image to use
  image: theiacloud/theia-cloud-landing-page:0.11.0-next

  # -- Optional: Override the imagePullPolicy for the landing page's docker image.
  # If this is omitted or empty, the root at .Values.imagePullPolicy is used.
  imagePullPolicy:

  # -- Optional: the image pull secret
  imagePullSecret:

  # -- the app id to launch
  appDefinition: "theia-cloud-demo"

  # -- If set to true no persisted storage is used when creating sessions on the landing page.
  # Set to false if you want to use persisted storage.
  ephemeralStorage: true

  # -- The page may show these additional apps in a drop down. This is a map.
  # The key maps to the app definition name
  # The value is the label that is supposed to be shown in the UI
  #
  # Example:
  # different-app-definition:
  #   label: "Different App Definition"
  # further-app-definition:
  #   label: "Further App Definition"
  additionalApps:
    # different-app-definition:
    #   label: "Different App Definition"
    # further-app-definition:
    #   label: "Further App Definition"

# -- Values related to Keycloak
# @default -- (see details below)
keycloak:
  # -- Whether keycloak authentication shall be used
  enable: false

  # -- Key cloak auth URL. Only has to be specified when enable: true
  authUrl: "https://keycloak.url/auth/"

  # -- The Keycloak Realm. Only has to be specified when enable: true
  realm: "TheiaCloud"

  # -- The client-id. Only has to be specified when enable: true
  clientId: "theia-cloud"

  # -- The oaid client secret. In case you configure your keycloak client as confidential,
  # then you may specifiy the secret here.
  # If you stick with our default public client, you may leave below value. For public clients
  # keycloak does not generate a client-secret, but in order to make oath2-proxy happy,
  # we will pass a value
  clientSecret: "publicbutoauth2proxywantsasecret"

  # -- The cookie secret. This should not be public! Only has to be specified when enable: true
  # See https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/overview/#generating-a-cookie-secret
  # for how to generate a strong cookie secret.
  cookieSecret: "OQINaROshtE9TcZkNAm5Zs2Pv3xaWytBmc5W7sPX7ws="

# -- Values related to the operator
# @default -- (see details below)
operator:
  # -- The operator image
  image: theiacloud/theia-cloud-operator:0.11.0-next

  # -- Optional: Override the imagePullPolicy for the operator's docker image.
  # If this is omitted or empty, the root at .Values.imagePullPolicy is used.
  imagePullPolicy:

  # -- Optional: the image pull secret
  imagePullSecret:

  # -- Whether theia applications shall be started eager. This means that the application is already
  # running without a user. When a user requests a new session, one of the already launched ones
  # is assigned.
  #
  # Currently only false is fully supported.
  eagerStart: false

  # -- Select your cloud provider. Possible values:
  # - K8S      Plain Kubernetes
  # - MINIKUBE Local deployment on Minikube
  cloudProvider: "K8S"

  # -- Whether Theia Cloud shall limit network speed. This might not be fully supported
  # on all cloud provider/in all clusters. Possible values:
  # - K8SANNOTATION                   Set via kubernetes annotations (kubernetes.io/egress-bandwidth and kubernetes.io/ingress-bandwidth)
  # - WONDERSHAPER                    Set via wondershaper init container
  # - K8SANNOTATIONANDWONDERSHAPER    Set Kubernetes annotations and use wondershaper init container
  bandwidthLimiter: "K8SANNOTATION"

  # -- If bandwidthLimiter is set to WONDERSHAPER or K8SANNOTATIONANDWONDERSHAPER this image will be used for the wondershaper init container
  wondershaperImage: theiacloud/theia-cloud-wondershaper:0.11.0-next

  # -- Set the number of active sessions a single user can launch
  sessionsPerUser: "1"

  # -- The name of the storage class for persistent volume claims for workspaces.
  # This storage class must be present on the cluster.
  # Most cloud providers offer a default storage class without additional configuration.
  storageClassName: "default"

  # -- The amount of requested storage for each persistent volume claim (PVC) for workspaces.
  # This is directly passed to created PVCs and must be a valid Kubernetes quantity.
  # See https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/
  requestedStorage: "250Mi"

  # -- Number of operator instances to create
  replicas: 2

  # -- Options to influence the operator's leader election
  # @default -- (see details below)
  leaderElection:
    leaseDuration: 6
    renewDeadline: 4
    retryPeriod: 1

  # -- Configures the timeout in milliseconds when a watcher for either AppDefinitions, Workspaces, or Sessions is assumed to be not working.
  # When this is detected the operator instance will stop and a new operator will set up fresh watchers.
  maxWatchIdleTime: "3600000"

  # -- Whether the operator should stop in cases where an exception is not handled
  continueOnException: false

  # -- Allows to override the operator's log4j configuration
  # @default -- (see details below)
  logging:
    override: false
    config: |+
      <?xml version="1.0" encoding="UTF-8"?>
      <Configuration status="warn">
        <Appenders>
          <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout
              pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" />
          </Console>
        </Appenders>
        <Loggers>
          <Logger name="org.eclipse.theia.cloud.operator" level="info"
            additivity="false">
            <AppenderRef ref="Console" />
          </Logger>
          <Root level="warn">
            <AppenderRef ref="Console" />
          </Root>
        </Loggers>
      </Configuration>

  # -- The version to use of the quay.io/oauth2-proxy/oauth2-proxy image
  oAuth2ProxyVersion: "v7.5.1"

# -- Values of the Theia.cloud REST service
# @default -- (see details below)
service:
  # -- The image to use
  image: theiacloud/theia-cloud-service:0.11.0-next

  # -- Optional: Override the imagePullPolicy for the service's docker image.
  # If this is omitted or empty, the root at .Values.imagePullPolicy is used.
  imagePullPolicy:

  # -- Optional: the image pull secret
  imagePullSecret:

# -- Values to influence the ingresses
# @default -- (see details below)
ingress:
  # -- The name of the ingress which will be updated to publish new theia application.
  # If this is not existing it will be created.
  # You may chose to set the ingress up yourself and point theia.cloud to the ingress via
  # the name
  instanceName: "theia-cloud-demo-ws-ingress"

  # -- The cluster issuer to use
  clusterIssuer: letsencrypt-prod

  # -- When set to true the cert-manager.io/common-name annotation will be set.
  # This is only required when the issued certificate by the cert-manager misses a
  # common-name
  theiaCloudCommonName: false

  # -- Sets the maximum allowed size of the client request body inside the application (e.g. file uploads in Theia).
  # Defaults to 1m. Setting size to 0 disables checking of client request body size.
  proxyBodySize: 1m

operatorrole:
  name: operator-api-access

servicerole:
  name: service-api-access

# -- Values to influence the monitor initialization on the operator
# @default -- (see details below)
monitor:
  # -- Should the monitor be enabled
  enable: true
  # -- Values to influence the activityTracker module
  # @default -- (see details below)
  activityTracker:
    # -- Should the activityTracker module be enabled
    enable: true
    # -- Minutes between re-pinging the pods
    interval: 1
