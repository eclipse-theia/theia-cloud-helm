{{- if .Values.hosts.usePaths }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ tpl (.Values.ingress.instanceName | toString) . }}
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if not .Values.hosts.tls }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header 'X-Forwarded-Uri' $request_uri;
    nginx.ingress.kubernetes.io/proxy-body-size: {{ tpl (.Values.ingress.proxyBodySize | toString) . }}
spec:
  ingressClassName: nginx
  {{- if .Values.hosts.tls }}
  tls:
  - hosts:
    - {{ tpl (.Values.hosts.paths.baseHost | toString) . }}
  {{- end }}
  {{- if not (lookup "networking.k8s.io/v1" "Ingress" .Release.Namespace  (tpl (.Values.ingress.instanceName | toString) .) ) }}
  rules:
    - host: {{ tpl (.Values.hosts.paths.baseHost | toString) . }}
      http:
  {{- else }}
  rules:
    {{ range $rule := (lookup "networking.k8s.io/v1" "Ingress" .Release.Namespace (tpl (.Values.ingress.instanceName | toString) .)).spec.rules }}
    - host: {{ .host }}
      {{ if .http }}
      http:
        paths:
          {{ with index .http.paths 0 }}
          - path: {{ .path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .backend.service.name  }}
                port:
                  number: {{ .backend.service.port.number  }}
          {{- end }}
      {{ end }}
    {{- end }}
  {{- end }}
{{- end }}